{"version":3,"file":"static/js/321.dd10eabd.chunk.js","mappings":"gMAGaA,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAG,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACU,MAA7BC,qCAA6BH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEjBE,EAAAA,EAAAA,IAAU,GAADC,OAFrBF,sCAE+BE,OAAGR,IAAO,KAAD,EAArC,OAARC,EAAQE,EAAAM,KAAAN,EAAAO,OAAA,SACPT,EAASU,MAAI,OAE6C,OAF7CR,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,UAEpBU,EAAAA,EAAAA,IAAe,kDAA4C,GAAMV,EAAAO,OAAA,SAAAP,EAAAS,IAAA,yBAAAT,EAAAW,OAAA,GAAAf,EAAA,kBAGxE,gBATwBgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,I,6FCSzB,EARyB,SAAHtB,GAAqB,IAAhBuB,EAASvB,EAATuB,UACzB,OACEC,EAAAA,EAAAA,KAAA,OAAKD,UAAS,eAAAV,OAAiBU,GAAYE,UACvCD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qFAGvB,C,+QCNMG,EAAMf,mBAICgB,EAAW,eAAA3B,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOY,EAAMY,EAASC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACjDM,EAAK,CAADR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEcE,EAAAA,EAAAA,KAAWsB,oDAA4BlB,GAAM,KAAD,EAErB,GAFnCc,EAAGtB,EAAAM,KACHiB,GAAUI,EAAAA,EAAAA,GAAQL,EAAId,KAAKoB,KAAKC,aAChCL,GAASM,EAAAA,EAAAA,GAAQR,EAAId,KAAKoB,KAAKG,KACL,IAA5BT,EAAId,KAAKoB,KAAKI,WAAsB7B,WAAsCoB,EAAO,CAAAvB,EAAAE,KAAA,SAM5C,OALvCkB,EAAQE,EAAId,MACZyB,aAAaC,QAAQ,QAASZ,EAAId,KAAK2B,KACvCF,aAAaC,QAAQ,UAAWZ,EAAId,KAAKoB,KAAKQ,UAC9CH,aAAaC,QAAQ,WAAYV,GAC7BC,EAAYY,EAAUf,EAAId,KAAKoB,KAAKG,IACxCE,aAAaC,QAAQ,MAAOT,GAAWzB,EAAAO,OAAA,SAChC,CAAE+B,OAAQ,IAAKC,YAAad,EAAWM,GAAIT,EAAId,KAAKoB,KAAKG,KAAI,QAAA/B,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAAAA,EAAAO,OAAA,SAAAP,EAAAS,IAAA,yBAAAT,EAAAW,OAAA,GAAAf,EAAA,mBAI3E,gBAjBqBgB,EAAA4B,EAAAC,GAAA,OAAAjD,EAAAqB,MAAA,KAAAC,UAAA,KAoBXuB,EAAY,SAACK,GAEtB,IAAIC,EAAUC,IAAAA,IAAAA,QAAqBF,EAAKG,WAAY3B,GAAK2B,WAEzD,OADAF,EAAUA,EAAQG,QAAQ,MAAO,IAErC,E,iCC0EA,EA5Fc,WACd,IAAMzB,GAAW0B,EAAAA,EAAAA,MAEbC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAiCL,EAAAA,EAAAA,UAAS,CACtC,WAAa,CAACM,MAAM,KAAMC,eAAe,SACzC,SAAW,CAACD,MAAM,KAAMC,eAAe,WACzCC,GAAAN,EAAAA,EAAAA,GAAAG,EAAA,GAHKI,EAASD,EAAA,GAACE,EAAYF,EAAA,IAK7BG,EAAAA,EAAAA,YAAU,WAEN,IAAI,IAAMC,KAAgBH,EAEnBI,SAASC,eAAeF,KAEvBG,EAAAA,EAAAA,IAAgBH,EAAaH,EAGzC,GAAE,CAACA,IAEH,IAAMO,EAAkB,eAAAzE,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAY,EAAA0D,EAAAnC,EAAAoC,EAAAC,EAAAC,EAAA,OAAA3E,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAClBoE,EAAAA,EAAAA,IAAiBZ,EAAWC,GAAc,CAAD3D,EAAAE,KAAA,eAAAF,EAAAO,OAAA,iBAQ7C,OAJD8C,GAAW,GACL7C,EAAO,CACX+D,WAAYb,EAAUa,WAAWhB,MACjCiB,SAAUd,EAAUc,SAASjB,OAC9BvD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGoBiB,EAAYX,EAAMa,GAAU,KAAD,EAApC,GACU,OADd6C,EAAIlE,EAAAM,MACDgC,OAAc,CAAAtC,EAAAE,KAAA,SACH,OAAZ6B,EAAKmC,EAAKnC,GAAE/B,EAAAE,KAAA,IACGX,EAAAA,EAAAA,GAAa,cAADc,OAAe0B,EAAE,uBAAqB,QAAjEoC,EAAMnE,EAAAM,KACN8D,EAAWD,EAAOC,SAClBC,EAAY,CAChBI,KAAML,EAASM,MAAQ,IAAMN,EAASO,SACtCC,MAAOR,EAASQ,MAChBC,OAAQT,EAASM,MAAMI,OAAO,KAEhCC,EAAAA,EAAAA,IAAa,0BACb9C,aAAaC,QAAQ,aAAc8C,KAAKC,UAAUZ,IAClDa,YAAW,WACTC,OAAOC,SAAStC,QAAQ,mBAADzC,OAAoB6D,EAAK3B,aAClD,GAAG,MAAMvC,EAAAE,KAAA,iBACkC,qBAAlCgE,EAAKpE,SAASU,KAAK6E,MAAMZ,OAElCa,EAAAA,EAAAA,IACE,+DACA,mKAEFjC,GAAW,IACgC,oBAAlCa,EAAKpE,SAASU,KAAK6E,MAAMZ,QAClC/D,EAAAA,EAAAA,IAAe,4BACf2C,GAAW,IACZ,QAAArD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAECuF,QAAQC,IAAGxF,EAAAS,IACb,yBAAAT,EAAAW,OAAA,GAAAf,EAAA,mBAEH,kBA1CqB,OAAAJ,EAAAqB,MAAA,KAAAC,UAAA,KA6CxB,OACIE,EAAAA,EAAAA,KAAAyE,EAAAA,SAAA,CAAAxE,UACIyE,EAAAA,EAAAA,MAAA,OAAK3E,UAAU,QAAOE,SAAA,EAClBD,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CAAC5E,UAAW,OAAQlB,IAAK,OAC9B6F,EAAAA,EAAAA,MAACE,EAAAA,EAAS,CAACC,MAAO,sBAAoBC,SAAS,mBAAe7E,SAAA,EAC1DyE,EAAAA,EAAAA,MAAA,OAAK3E,UAAU,mBAAkBE,SAAA,EAC7BD,EAAAA,EAAAA,KAAC+E,EAAAA,GAAK,CAACF,MAAM,UAAUG,YAAa,UAAWjE,GAAG,aAAakE,SAAU,SAACC,IAAKC,EAAAA,EAAAA,IAAYD,EAAE,aAAaxC,EAAUC,EAAa,KACjI3C,EAAAA,EAAAA,KAACoF,EAAAA,GAAa,CAACP,MAAO,gBAAcG,YAAa,gBAAcjE,GAAG,WAAWkE,SAAU,SAACC,IAAKC,EAAAA,EAAAA,IAAYD,EAAE,WAAWxC,EAAUC,EAAa,QAEjJ3C,EAAAA,EAAAA,KAACqF,EAAAA,GAAO,CAACC,GAAI,mBAAmBrF,UAC5BD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAkBE,SAAC,iCAErCmC,GACGpC,EAAAA,EAAAA,KAAA,OAAKuF,MAAO,CAACC,MAAO,OAAQC,QAAS,OAAQC,eAAgB,UAAUzF,UACnED,EAAAA,EAAAA,KAAC2F,EAAAA,EAAgB,OAGrB3F,EAAAA,EAAAA,KAAC4F,EAAAA,GAAM,CAAC7F,UAAW,cAAe8E,MAAM,oBAAiBgB,QAAS,WAAK5C,GAAoB,KAE/FjD,EAAAA,EAAAA,KAACqF,EAAAA,GAAO,CAACC,GAAI,OAAOrF,UAChBD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,WAAUE,SAAC,qCAMlD,C,oHCxGMC,EAAMf,mBAEC2B,EAAU,SAACY,GACpB,IAAIC,EAAUC,IAAAA,IAAAA,QAAqBF,EAAKG,WAAY3B,GAAK2B,WAEzD,OADAF,EAAUA,EAAQG,QAAQ,MAAO,IAErC,EAGanB,EAAU,SAACmF,GACpB,IAAIC,EAAUD,EAAYhE,QAAQ,KAAM,KAExC,OAAOF,IAAAA,IAAAA,QAAqBmE,EAAS7F,EAAK,CAAE8F,GAAIpE,IAAAA,IAAAA,IAAAA,MADrC,sCACkEC,SAASD,IAAAA,IAAAA,KAC1F,C","sources":["Api/Committee/Committee.js","components/atoms/AnimationLoading/AnimationLoading.jsx","Api/login/apiLogic.js","pages/Login/Login.jsx","utilities/Hooks.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { IncorrectModal } from \"../../components/molecules/modals/Modals\";\r\n\r\nexport const getAxiosData = async (url) => {\r\n    const server = process.env.REACT_APP_API_URL;\r\n    try {\r\n        const response = await axios.get(`${server}${url}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        IncorrectModal(\"Ocurrio algún error, intentelo más tarde\", true);\r\n        return error;\r\n    }\r\n};","import React from 'react'\r\n\r\nimport \"./AnimationLoading.scss\"\r\n\r\nconst AnimationLoading = ({className}) => {\r\n  return (\r\n    <div className={`cnt_loading ${className}`}>\r\n        <div className='AnimationLoading border-solid border-t-[2px] border-green-700 dark:border-white'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnimationLoading","import axios from \"axios\"\r\nimport { CorrectModal, IncorrectModal, InfoModal } from \"../../components/molecules/modals/Modals\";\r\n// import { Decrypt } from \"../../utilities/Hooks\";\r\nimport cryptojs from 'crypto-js'\r\nconst key = process.env.REACT_APP_SECRET_KEY\r\nimport { Decrypt, Encrypt } from \"../../utilities/Hooks\";\r\nconst urlApi = process.env.REACT_APP_API_URL;\r\n\r\nexport const loginConfir = async (data, setName, navigate) => {\r\n    if (data) {\r\n      try {\r\n        const res = await axios.post(urlApi + \"/api/auth/local\", data);\r\n        const typeAcc = Decrypt(res.data.user.accounttype);\r\n        const IdCrip = Encrypt(res.data.user.id);\r\n        if (res.data.user.confirmed === true && process.env.REACT_APP_ACCOUNTTYPE === typeAcc) {\r\n          setName(res.data);\r\n          localStorage.setItem(\"token\", res.data.jwt);\r\n          localStorage.setItem(\"userWeb\", res.data.user.username);\r\n          localStorage.setItem(\"jeyaiodl\", IdCrip);\r\n          let idEncrypt = EncryptNB(res.data.user.id);\r\n          localStorage.setItem(\"ref\", idEncrypt);\r\n          return { status: 200, dtasEncrypt: idEncrypt, id: res.data.user.id };\r\n        } \r\n      } catch (error) { return error }\r\n    }\r\n  };\r\n  \r\n\r\nexport const EncryptNB = (text)=>\r\n{\r\n    let encrypt = cryptojs.AES.encrypt(text.toString(), key).toString();\r\n    encrypt = encrypt.replace(/\\//g, \"_\")\r\n    return encrypt\r\n}\r\n\r\nexport const DecryptNB = (encriptText) => {\r\n    let decrypt = encriptText.replace(/_/g, \"/\")\r\n    const iv = \"a0d5ebe6a0d5ebe6a0d5ebe6a0d5ebe6\";\r\n    return cryptojs.AES.decrypt(decrypt, key, { iv: cryptojs.enc.Hex.parse(iv)}).toString(cryptojs.enc.Utf8);\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport './Login.scss'\r\nimport LoginCard from \"../../components/atoms/LoginCard/LoginCard\";\r\nimport { Button, Input, InputPassword } from \"../../components\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { ColorValidation, SubmitValidation, UpdateValue } from \"../../utilities/Validations\";\r\nimport { useStateContext } from \"../../contexts/ContextProvider\";\r\nimport Back from \"../../components/atoms/Back/Back\";\r\nimport { loginConfir } from \"../../Api/login/apiLogic\";\r\nimport { Encrypt } from \"../../utilities/Hooks\";\r\nimport AnimationLoading from \"../../components/atoms/AnimationLoading/AnimationLoading\";\r\nimport { CorrectModal, IncorrectModal, InfoModal } from \"../../components/molecules/modals/Modals\";\r\nimport { getAxiosData } from \"../../Api/Committee/Committee\";\r\n\r\n\r\nconst Login = () => {\r\nconst navigate = useNavigate()\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [inputList,setInputList] = useState({\r\n        \"identifier\":{value:null, validationType:\"empty\"},\r\n        \"password\":{value:null, validationType:\"empty\"},\r\n    })\r\n\r\n    useEffect(()=>\r\n    {\r\n        for(const propertyName in inputList)\r\n        {\r\n            if(document.getElementById(propertyName))\r\n            {\r\n                ColorValidation(propertyName,inputList)\r\n            }\r\n        }\r\n    },[inputList])\r\n\r\n    const validationFunction = async () => {\r\n        if (!SubmitValidation(inputList, setInputList)) {\r\n          return;\r\n        }\r\n      \r\n        setLoading(true);\r\n        const data = {\r\n          identifier: inputList.identifier.value,\r\n          password: inputList.password.value\r\n        };\r\n      \r\n        try {\r\n          const resp = await loginConfir(data, navigate);\r\n          if (resp.status === 200) {\r\n            const id = resp.id\r\n            const myDtas = await getAxiosData(`/api/users/${id}?populate=register`)\r\n            const register = myDtas.register;\r\n            const arrayDtas = {\r\n              name: register.names + \" \" + register.lastName,\r\n              email: register.email,\r\n              letter: register.names.charAt(0)\r\n            }\r\n            CorrectModal(\"Credenciales correctas\");\r\n            localStorage.setItem(\"userDatasW\", JSON.stringify(arrayDtas))\r\n            setTimeout(() => {\r\n              window.location.replace(`/user/dashboard/${resp.dtasEncrypt}`);\r\n            }, 3500);\r\n          } else if (resp.response.data.error.name === \"ApplicationError\") {\r\n            \r\n            InfoModal(\r\n              \"Para iniciar sesión, necesitamos que confirmes tu cuenta.\",\r\n              \" Por favor, sigue las instrucciones en tu correo electrónico para completar el proceso de autenticación. Si necesitas ayuda, contáctanos. ¡Gracias!\"\r\n            );\r\n            setLoading(false)\r\n          } else if (resp.response.data.error.name === \"ValidationError\") {\r\n            IncorrectModal(\"Credenciales incorrectas\");\r\n            setLoading(false)\r\n          }\r\n        } catch (error) {\r\n            console.log(error)\r\n          // Manejar cualquier error de la llamada a loginConfir\r\n        }\r\n      };\r\n      \r\n\r\n    return (\r\n        <>\r\n            <div className=\"Login\">\r\n                <Back className={\"back\"} url={\"/\"}></Back>\r\n                <LoginCard title={\"Inicio de sesión\"} subTitle=\"Ingresar aquí\">\r\n                    <div className=\"inputs-container\">\r\n                        <Input title=\"Usuario\" placeholder={\"Usuario\"} id=\"identifier\" onChange={(e)=>{UpdateValue(e,\"identifier\",inputList,setInputList)}}></Input>\r\n                        <InputPassword title={\"Contraseña\"} placeholder={\"Contraseña\"} id=\"password\" onChange={(e)=>{UpdateValue(e,\"password\",inputList,setInputList)}}></InputPassword>\r\n                    </div>\r\n                    <NavLink to={\"/recover-account\"}>\r\n                        <div className=\"rememberPassword\">Olvidé mi contraseña</div>\r\n                    </NavLink>\r\n                    {loading ? (\r\n                        <div style={{width: \"100%\", display: \"flex\", justifyContent: \"center\"}}>\r\n                            <AnimationLoading />\r\n                        </div>\r\n                    ):(     \r\n                        <Button className={\"btn_primary\"} title=\"Iniciar sesión\" onClick={()=>{validationFunction()}}></Button>\r\n                    )}\r\n                    <NavLink to={\"/log\"}>\r\n                        <div className=\"register\">Aun no tengo una cuenta</div>\r\n                    </NavLink>\r\n                </LoginCard>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Login","import cryptojs from 'crypto-js'\r\n\r\nconst key = process.env.REACT_APP_SECRET_KEY\r\n\r\nexport const Encrypt = (text) => {\r\n    let encrypt = cryptojs.AES.encrypt(text.toString(), key).toString();\r\n    encrypt = encrypt.replace(/\\//g, \"_\")\r\n    return encrypt\r\n};\r\n\r\n\r\nexport const Decrypt = (encriptText) => {\r\n    let decrypt = encriptText.replace(/_/g, \"/\")\r\n    const iv = \"a0d5ebe6a0d5ebe6a0d5ebe6a0d5ebe6\";\r\n    return cryptojs.AES.decrypt(decrypt, key, { iv: cryptojs.enc.Hex.parse(iv)}).toString(cryptojs.enc.Utf8);\r\n};"],"names":["getAxiosData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","wrap","_context","prev","next","process","axios","concat","sent","abrupt","data","t0","IncorrectModal","stop","_x","apply","arguments","className","_jsx","children","key","loginConfir","setName","navigate","res","typeAcc","IdCrip","idEncrypt","urlApi","Decrypt","user","accounttype","Encrypt","id","confirmed","localStorage","setItem","jwt","username","EncryptNB","status","dtasEncrypt","_x2","_x3","text","encrypt","cryptojs","toString","replace","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","value","validationType","_useState4","inputList","setInputList","useEffect","propertyName","document","getElementById","ColorValidation","validationFunction","resp","myDtas","register","arrayDtas","SubmitValidation","identifier","password","name","names","lastName","email","letter","charAt","CorrectModal","JSON","stringify","setTimeout","window","location","error","InfoModal","console","log","_Fragment","_jsxs","Back","LoginCard","title","subTitle","Input","placeholder","onChange","e","UpdateValue","InputPassword","NavLink","to","style","width","display","justifyContent","AnimationLoading","Button","onClick","encriptText","decrypt","iv"],"sourceRoot":""}