{"version":3,"file":"static/js/525.21329acc.chunk.js","mappings":"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","sources":["Api/login/apiLogic.js","pages/Login/Login.jsx"],"sourcesContent":["import axios from \"axios\"\r\nimport { CorrectModal, IncorrectModal, InfoModal } from \"../../components/molecules/modals/Modals\";\r\nconst urlApi = process.env.REACT_APP_API_URL;\r\nexport const loginConfir = async (data,setName,navigate)=>\r\n{\r\n\r\n    if(data)\r\n    {\r\n        const authenticated = axios.post(urlApi+\"/api/auth/local\",data) \r\n        .then((res)=>\r\n        {\r\n            if(res.data.user.confirmed === true){\r\n                setName(res.data)\r\n                localStorage.setItem(\"token\",res.data.jwt)\r\n                localStorage.setItem(\"username\", res.data.user.username)\r\n                CorrectModal(\"Credenciales correctas\")\r\n                setTimeout(() => {\r\n                    window.location.replace('/user/dashboard');\r\n                }, 3500)\r\n\r\n            }\r\n        })\r\n        .catch((error)=>\r\n        {\r\n            if(error.response.data.error.name === \"ApplicationError\"){\r\n                InfoModal(\"Para iniciar sesión, necesitamos que confirmes tu cuenta.\", \" Por favor, sigue las instrucciones en tu correo electrónico para completar el proceso de autenticación. Si necesitas ayuda, contáctanos. ¡Gracias!\")\r\n            }\r\n            else if(error.response.data.error.name === \"ValidationError\"){\r\n                IncorrectModal(\"Credenciales incorrectas\")\r\n            }\r\n        })\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport './Login.scss'\r\nimport LoginCard from \"../../components/atoms/LoginCard/LoginCard\";\r\nimport { Button, Input, InputPassword } from \"../../components\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { ColorValidation, SubmitValidation, UpdateValue } from \"../../utilities/Validations\";\r\nimport { useStateContext } from \"../../contexts/ContextProvider\";\r\nimport Back from \"../../components/atoms/Back/Back\";\r\nimport { loginConfir } from \"../../Api/login/apiLogic\";\r\n\r\n\r\nconst Login = () => {\r\nconst navigate = useNavigate()\r\n\r\n\r\n    const [inputList,setInputList] = useState({\r\n        \"identifier\":{value:null, validationType:\"empty\"},\r\n        \"password\":{value:null, validationType:\"empty\"},\r\n    })\r\n\r\n    useEffect(()=>\r\n    {\r\n        for(const propertyName in inputList)\r\n        {\r\n            if(document.getElementById(propertyName))\r\n            {\r\n                ColorValidation(propertyName,inputList)\r\n            }\r\n        }\r\n    },[inputList])\r\n\r\n    const validationFunction =()=>\r\n    {\r\n        if(SubmitValidation(inputList,setInputList))\r\n        {\r\n            // ----------------------------------------------------------------------------poner ruta de auth cuado ya este\r\n\r\n            const data = {\r\n                \"identifier\":inputList.identifier.value,\r\n                \"password\":inputList.password.value\r\n            }\r\n            let res;\r\n            loginConfir(data,navigate)\r\n           \r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Login\">\r\n                <Back className={\"back\"} url={\"/\"}></Back>\r\n                <LoginCard title={\"Inicio de sesión\"} subTitle=\"Ingresar aquí\">\r\n                    <div className=\"inputs-container\">\r\n                        <Input title=\"Usuario\" placeholder={\"Usuario\"} id=\"identifier\" onChange={(e)=>{UpdateValue(e,\"identifier\",inputList,setInputList)}}></Input>\r\n                        <InputPassword title={\"Contraseña\"} placeholder={\"Contraseña\"} id=\"password\" onChange={(e)=>{UpdateValue(e,\"password\",inputList,setInputList)}}></InputPassword>\r\n                    </div>\r\n                    <NavLink to={\"/recover-account\"}>\r\n                        <div className=\"rememberPassword\">Olvidé mi contraseña</div>\r\n                    </NavLink>\r\n                    <Button className={\"btn_primary\"} title=\"Iniciar sesión\" onClick={()=>{validationFunction()}}></Button>\r\n                    <NavLink to={\"/log\"}>\r\n                        <div className=\"register\">Aun no tengo una cuenta</div>\r\n                    </NavLink>\r\n                </LoginCard>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Login"],"names":["loginConfir","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","setName","navigate","wrap","_context","prev","next","axios","urlApi","then","res","user","confirmed","localStorage","setItem","jwt","username","CorrectModal","setTimeout","window","location","replace","catch","error","response","name","InfoModal","IncorrectModal","stop","_x","_x2","_x3","apply","arguments","useNavigate","_useState","useState","value","validationType","_useState2","_slicedToArray","inputList","setInputList","useEffect","propertyName","document","getElementById","ColorValidation","_jsx","_Fragment","children","_jsxs","className","Back","url","LoginCard","title","subTitle","Input","placeholder","id","onChange","e","UpdateValue","InputPassword","NavLink","to","Button","onClick","SubmitValidation","identifier","password","validationFunction"],"sourceRoot":""}