{"version":3,"file":"static/js/84.d4051675.chunk.js","mappings":"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","sources":["Api/Register/Register.js","pages/Log/Log.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const postAxiosRegister = async (url, form) => {\r\n  try {\r\n    const server = process.env.REACT_APP_API_URL;\r\n    const response = await axios.post(`${server}${url}`, form);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const userAxiosPost = async (url, form) => {\r\n  try {\r\n    const server = process.env.REACT_APP_API_URL;\r\n    const response = await axios.post(`${server}${url}`, form);\r\n    return response;\r\n  } catch (error) {\r\n    console.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAxiosCountrys = async (url) => {\r\n  const server = process.env.REACT_APP_API_URL;\r\n  try {\r\n    const response = await axios.get(`${server}${url}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return error;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\n\r\nimport { Button, Input, InputPassword, Select, Shedule } from \"../../components\";\r\nimport Back from \"../../components/atoms/Back/Back\";\r\n\r\n//Styles\r\nimport \"./Log.scss\";\r\nimport { ColorValidation, SubmitValidation, UpdateValue, ValidationPassword } from \"../../utilities/Validations\";\r\nimport { CorrectModal, IncorrectModal, RegistroModal } from \"../../components/molecules/modals/Modals\";\r\nimport { getAxiosCountrys, postAxiosRegister, userAxiosPost } from \"../../Api/Register/Register\";\r\n\r\nconst Log = () => {\r\n\r\n  const [inputList, setInputList] = useState({\r\n    names: { value: null, validationType: \"empty\" },\r\n    lastName: { value: null, validationType: \"empty\" },\r\n    country: { value: null, validationType: \"empty\" },\r\n    birthdate : { value: null, validationType: \"empty\" },\r\n    gender: { value: null, validationType: \"empty\" },\r\n    user: { value: null, validationType: \"empty\" },\r\n    email: { value: null, validationType: \"email\" },\r\n    password: { value: null, validationType: \"empty\" },\r\n    confirm_password: { value: null, validationType: \"empty\" },\r\n    orcid: { value: null, validationType: \"empty\" },\r\n    ocupation: { value: null, validationType: \"empty\" },\r\n    institute: {value: null, validationType: \"empty\"},\r\n    academic_level: { value: null, validationType: \"empty\" },\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    for (const propertyName in inputList) {\r\n      if (document.getElementById(propertyName)) {\r\n        ColorValidation(propertyName, inputList);\r\n      }\r\n      if (propertyName === \"email\") {\r\n        ColorValidation(propertyName, inputList, \"email\");\r\n      }\r\n    }\r\n  }, [inputList]);\r\n\r\n\r\n  const [completedRegister, setCompletedRegister] = useState(false)\r\n  const handleSubmit = async () => {\r\n    const validate = SubmitValidation(inputList, setInputList);\r\n    const objetData = { \"data\": {} };\r\n    const keysToTransform = [\"country\", \"gender\", \"ocupation\", \"academic_level\"];\r\n    if (validate) {\r\n      for (const [key, { value: data }] of Object.entries(inputList)) {\r\n        objetData.data[key] = keysToTransform.includes(key) ? data : data;\r\n      }\r\n      try {\r\n        const saveUser = {\r\n          username: inputList.user.value,\r\n          email: inputList.email.value,\r\n          password: inputList.password.value,\r\n        };\r\n\r\n        const response = await userAxiosPost(\"/api/auth/local/register\", saveUser);\r\n        if (response.status === 200) {\r\n          const res = await postAxiosRegister(\"/api/registers\", objetData);\r\n          if (res.status === 200) {\r\n            RegistroModal(\"¡Gracias por registrarte!\", \"Revisa tu correo para confirmar tu cuenta haciendo clic en el enlace de confirmación. ¡Bienvenido/a a nuestra comunidad en línea!\");\r\n            setTimeout(() => {\r\n              setCompletedRegister(true)\r\n            }, 5000)\r\n          } else {\r\n            IncorrectModal(\"¡Algo salió mal, intentalo más tarde!\", true)\r\n          }\r\n        }\r\n\r\n        if (response.status === 400) {\r\n          IncorrectModal(`Se envio una correo de confimacion a la siguiente direccion: ${inputList.email.value}`)\r\n        }\r\n      } catch (error) {\r\n        IncorrectModal(\"El correo electrónico o el nombre de usuario ya están en uso\", true);\r\n      }\r\n    }\r\n  }\r\n\r\n  const [steps, setSteps] = useState({\r\n    step_one: true,\r\n    step_two: false,\r\n    step_three: false\r\n  })\r\n\r\n  const handleStepOne = () => {\r\n\r\n    setSteps(prevState => ({\r\n      ...prevState,\r\n      step_one: false,\r\n      step_two: true\r\n    }));\r\n  }\r\n\r\n  const handleReturnOne = () => {\r\n    setSteps(prevState => ({\r\n      ...prevState,\r\n      step_one: true,\r\n      step_two: false\r\n    }));\r\n  }\r\n\r\n  const handleStepTwo = () => {\r\n    const validate = ValidationPassword(inputList.password.value);\r\n    if (!validate) {\r\n      IncorrectModal(\r\n        \"La contraseña debe contener al menos un dígito, una letra mayúscula y un carácter especial, y tener al menos 8 caracteres.\",\r\n        true\r\n      );\r\n    } else if (inputList.password.value !== inputList.confirm_password.value) {\r\n      IncorrectModal(\"Las contraseñas no coinciden\", true);\r\n    } else {\r\n      setSteps((prevState) => ({\r\n        ...prevState,\r\n        step_three: true,\r\n        step_two: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleReturnTwo = () => {\r\n    setSteps(prevState => ({\r\n      ...prevState,\r\n      step_three: false,\r\n      step_two: true\r\n    }));\r\n  }\r\n\r\n  const gender = [\r\n    { value: \"Masculino\", code: \"masculino\" },\r\n    { value: \"Femenino\", code: \"femenino\" },\r\n    { value: \"Otros\", code: \"otro\" },\r\n  ];\r\n\r\n  const academic = [\r\n    { id: 1, value: \"Maestria\", code: \"maestria\" },\r\n    { id: 2, value: \"Doctorado\", code: \"dosctorado\" }\r\n  ]\r\n\r\n  const ocupation = [\r\n    { id: 1, value: \"Académico\", code: \"academico\" },\r\n    { id: 2, value: \"Investigador\", code: \"investigador\" },\r\n  ]\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axiosData();\r\n  }, []);\r\n\r\n  const axiosData = async () => {\r\n    try {\r\n      const response = await getAxiosCountrys(\"/api/countries\");\r\n      const data = response.data;\r\n      const newData = data.map(({ id, attributes: { value } }) => ({\r\n        id,\r\n        value,\r\n      }));\r\n\r\n      setData(newData);\r\n    } catch (error) {\r\n      IncorrectModal(\"¡Algo salió mal, intentalo más tarde!\", true)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Log_\">\r\n      <div className={`inside_log ${completedRegister && \"hiddenMenu\"}`}>\r\n        <Back className={\"btn_return\"} url={\"/\"} />\r\n        <div className=\"container\">\r\n          <div className=\"tamanio_cards\">\r\n            <h1>Datos personales</h1>\r\n            <div className=\"inside_card\">\r\n              <Input title={\"Nombre(s)\"} placeholder={\"Nombre(s)\"} id={\"names\"} onChange={(e) => UpdateValue(e, \"names\", inputList, setInputList)} />\r\n              <Input title={\"Apellidos\"} placeholder={\"Apellidos\"} id=\"lastName\" onChange={(e) => UpdateValue(e, \"lastName\", inputList, setInputList)} />\r\n              <div className=\"cnt_selects\">\r\n                <Select title={\"País\"} placeholder={\"País\"} value={inputList.country.value} options={data} id={\"country\"} onChange={(e) => UpdateValue(e, \"country\", inputList, setInputList)} />\r\n                <Select title={\"Género\"} placeholder={\"Género\"} options={gender} value={inputList.gender.value} id={\"gender\"} onChange={(e) => UpdateValue(e, \"gender\", inputList, setInputList)} />\r\n              </div>\r\n              <Input type=\"date\" title={\"Fecha de nacimiento\"} placeholder={\"Fecha de nacimiento\"} value={inputList.birthdate.value} id={\"birthdate\"} onChange={(e) => UpdateValue(e, \"birthdate\", inputList, setInputList)} />\r\n              <div className=\"cnt_btn\">\r\n                <Button title={\"Siguiente\"} className={\"btn_primary\"} onClick={() => handleStepOne()} />\r\n              </div>\r\n            </div>\r\n            {!steps.step_one && <div className=\"dark:bg-half-transparent-black layer_blur\"></div>}\r\n          </div>\r\n          <div className=\"tamanio_cards\">\r\n            <h1>Cuenta</h1>\r\n            <div className=\"inside_card\">\r\n              <Input title={\"Usuario\"} placeholder={\"Usuario\"} id={\"user\"} onChange={(e) => UpdateValue(e, \"user\", inputList, setInputList)} />\r\n              <Input title={\"Correo electrónico\"} placeholder={\"Correo electrónico\"} id={\"email\"} onChange={(e) => UpdateValue(e, \"email\", inputList, setInputList)} />\r\n              <div className=\"instructions_pass\">\r\n                <InputPassword title={\"Contraseña\"} placeholder={\"Contraseña\"} id={\"password\"} onChange={(e) => UpdateValue(e, \"password\", inputList, setInputList)} />\r\n                <div className=\"desxr_\">Utiliza ocho caracteres como mínimo con una combinación de una letra, un número y un símbolo</div>\r\n              </div>\r\n              <InputPassword title={\"Confirmar contraseña\"} placeholder={\"Confirmar contraseña\"} id={\"confirm_password\"} onChange={(e) => UpdateValue(e, \"confirm_password\", inputList, setInputList)} />\r\n              <div className=\"cnt_btn btn_second\">\r\n                <Button title={\"Regresar\"} className={\"btn_cancel\"} onClick={() => handleReturnOne()} />\r\n                <Button title={\"Siguiente\"} className={\"btn_primary\"} onClick={() => handleStepTwo()} />\r\n              </div>\r\n            </div>\r\n            {!steps.step_two && <div className=\"dark:bg-half-transparent-black layer_blur\"></div>}\r\n          </div>\r\n          <div className=\"tamanio_cards three_card\">\r\n            <div className=\"inside_three\">\r\n              <h1>Tipo de cuenta</h1>\r\n              <div className=\"inside_card inside_card_three\">\r\n                <div className=\"cnt-orcid\">\r\n                  <Input title={\"Orcid ID\"} placeholder={\"Orcid ID\"} id={\"orcid\"} onChange={(e) => UpdateValue(e, \"orcid\", inputList, setInputList)} />\r\n                  <label className=\"orcid_\">Solo el <a href=\"https://orcid.org/\" style={{color: \"blue\"}} target=\"_blank\" rel=\"noreferrer\">Registro ORCID</a> puede asignar ORCID iDs. Debes aceptar sus\r\n                    estándares para disponer de ORCID iDs e incluir la URL completa\r\n                    (pe. https://orcid.org/0000-0002-1825-0097).\r\n                  </label>\r\n                </div>\r\n                <Input title={\"Instituto\"} placeholder={\"Instituto\" } id={\"institute\"} onChange={(e) => UpdateValue(e, \"institute\", inputList, setInputList)}/>\r\n                <Select title={\"Ocupación\"} placeholder={\"Ocupación\"} options={ocupation} value={inputList.ocupation.value} id={\"ocupation\"} onChange={(e) => UpdateValue(e, \"ocupation\", inputList, setInputList)} />\r\n                <Select title={\"Nivel académico\"} placeholder={\"Nivel académico\"} options={academic} value={inputList.academic_level.value} id={\"academic_level\"} onChange={(e) => UpdateValue(e, \"academic_level\", inputList, setInputList)} />\r\n              </div>\r\n            </div>\r\n            <div className=\"cnt_btn th_\">\r\n              <Button title={\"Regresar\"} className={\"btn_cancel\"} onClick={() => handleReturnTwo()} />\r\n              <Button title={\"Crear cuenta\"} className={\"btn_primary\"} onClick={() => handleSubmit()} />\r\n            </div>\r\n            {!steps.step_three && <div className=\"dark:bg-half-transparent-black layer_blur\"></div>}\r\n          </div>\r\n        </div>\r\n        <div className=\"dark:text-white Ihave_Account\">\r\n          <NavLink className={\"link_account\"} to={\"/login\"}>Ya tengo una cuenta</NavLink>\r\n        </div>\r\n      </div>\r\n      <div className={`hiddenDiv dark:text-white ${completedRegister && \"completedRegister\"}`}>\r\n            <label htmlFor=\"\">¡Registro Completo!</label>\r\n          Revisa tu bandeja de correo electrónico:{\" \"} <b>{inputList.email.value}</b>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Log;\r\n"],"names":["postAxiosRegister","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","form","response","wrap","_context","prev","next","process","axios","concat","sent","abrupt","t0","console","error","stop","_x","_x2","apply","arguments","userAxiosPost","_ref2","_callee2","_context2","_x3","_x4","getAxiosCountrys","_ref3","_callee3","_context3","data","_x5","_useState","useState","names","value","validationType","lastName","country","birthdate","gender","user","email","password","confirm_password","orcid","ocupation","institute","academic_level","_useState2","_slicedToArray","inputList","setInputList","useEffect","propertyName","document","getElementById","ColorValidation","_useState3","_useState4","completedRegister","setCompletedRegister","handleSubmit","validate","objetData","keysToTransform","_i","_Object$entries","_Object$entries$_i","key","_data","saveUser","SubmitValidation","Object","entries","length","includes","username","status","RegistroModal","setTimeout","IncorrectModal","_useState5","step_one","step_two","step_three","_useState6","steps","setSteps","_useState7","_useState8","setData","axiosData","_data2","newData","map","id","attributes","_jsxs","className","children","_jsx","Back","Input","title","placeholder","onChange","e","UpdateValue","Select","options","code","type","Button","onClick","prevState","_objectSpread","InputPassword","ValidationPassword","href","style","color","target","rel","NavLink","to","htmlFor"],"sourceRoot":""}