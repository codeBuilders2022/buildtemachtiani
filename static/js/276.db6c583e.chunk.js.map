{"version":3,"file":"static/js/276.db6c583e.chunk.js","mappings":"0PAkFA,UAvEsB,WAClB,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAWC,EAAAA,EAAAA,MACjBC,GAAiCP,EAAAA,EAAAA,UAAS,CACtCG,KAAK,CAACK,MAAM,KAAKC,eAAe,SAChCC,KAAK,CAACF,MAAM,KAAKC,eAAe,SAChCE,KAAK,CAACH,MAAM,KAAKC,eAAe,SAChCG,OAAO,CAACJ,MAAM,KAAKC,eAAe,WACpCI,GAAAX,EAAAA,EAAAA,GAAAK,EAAA,GALKO,EAASD,EAAA,GAACE,EAAYF,EAAA,IAM7BG,EAAAA,EAAAA,YAAU,WAEN,IAAI,IAAMC,KAAgBH,EAEnBI,SAASC,eAAeF,KAEvBG,EAAAA,EAAAA,IAAgBH,EAAaH,EAGzC,GAAE,CAACA,KACHE,EAAAA,EAAAA,YAAU,WAEN,IAAIK,GAAaC,EAAAA,EAAAA,GAAA,GAAOR,GACxBO,EAAclB,KAAKK,MAAQL,EAC3BY,EAAaM,EACjB,GAAE,CAAClB,IAUH,OACIoB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC1BE,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAAAH,SAAA,EACTF,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACH,UAAW,YACjBH,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CAACC,MAAO,iBAAkBC,OAAO,kBAAkBC,QAAS,YAX5EC,EAAAA,EAAAA,IAAiBpB,EAAUC,MAE1BoB,EAAAA,EAAAA,GAAa,0CACb9B,EAAS,KAQ8E,KAC/EkB,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CAACV,UAAW,4BAA4BD,UACjDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,4BAA2BD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAACC,GAAG,OAAOC,SAAUnC,KAChCmB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUD,SAAM,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,aAGzCgB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,SAAC,6BAC3BF,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACC,KAAK,OAAOf,UAAW,YAAaY,GAAG,OAAOI,SAAU,SAACC,IAAKC,EAAAA,EAAAA,IAAYD,EAAE,OAAO7B,EAAUC,EAAa,KACjHQ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,SAAC,wFAIjCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACjBF,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACT,MAAO,yBAAuBc,YAAa,yBAAuBnB,UAAW,mBAAoBY,GAAG,OAAOI,SAAU,SAACC,IAAKC,EAAAA,EAAAA,IAAYD,EAAE,OAAO7B,EAAUC,EAAa,OAElLY,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EAEjBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,SAAC,aAC3BF,EAAAA,EAAAA,KAAA,YAAUG,UAAU,yBAAyBY,GAAG,SAASI,SAAU,SAACC,IAAKC,EAAAA,EAAAA,IAAYD,EAAE,SAAS7B,EAAUC,EAAa,kBASvJ,C","sources":["pages/CreateArticle/CreateArticle.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './CreateArticle.scss'\r\nimport ExteriorCard from \"../../components/atoms/ExteriorCard/ExteriorCard\";\r\nimport Back from \"../../components/atoms/Back/Back\";\r\nimport { Header, Input } from \"../../components\";\r\nimport InteriorCard from \"../../components/atoms/InteriorCard/InteriorCard\";\r\nimport UploadWord from \"../../components/molecules/UploadWord/UploadWord\";\r\nimport { ColorValidation, SubmitValidation, UpdateValue } from \"../../utilities/Validations\";\r\nimport { CorrectModal } from \"../../components/molecules/modals/Modals\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CreateArticle = () => {\r\n    const [word, setWord] = useState(null)\r\n    const navigate = useNavigate()\r\n    const [inputList,setInputList] = useState({\r\n        word:{value:null,validationType:\"empty\"},\r\n        date:{value:null,validationType:\"empty\"},\r\n        name:{value:null,validationType:\"empty\"},\r\n        resume:{value:null,validationType:\"empty\"},\r\n    })\r\n    useEffect(()=>\r\n    {\r\n        for(const propertyName in inputList)\r\n        {\r\n            if(document.getElementById(propertyName))\r\n            {\r\n                ColorValidation(propertyName,inputList);\r\n            }\r\n        }\r\n    },[inputList])\r\n    useEffect(()=>\r\n    {\r\n        let inputListCopy = {...inputList}\r\n        inputListCopy.word.value = word;\r\n        setInputList(inputListCopy)\r\n    },[word])\r\n\r\n    const submit = ()=>\r\n    {\r\n        if(SubmitValidation(inputList,setInputList))\r\n        {\r\n            CorrectModal(\"¡Artículo enviado correctamente!\");\r\n            navigate(\"/\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"CreateArticle\">\r\n                <ExteriorCard>\r\n                    <Back className={\"_back_\"} />\r\n                    <Header title={\"Nuevo articulo\"} button=\"Enviar articulo\" onClick={()=>submit()} />\r\n                    <InteriorCard className={\"cardInteriorCreateArticle\"}>\r\n                        <div className=\"grid-patern-CreateArticle\">\r\n                            <div className=\"col1\">\r\n                                <div>\r\n                                    <UploadWord id=\"word\" setValue={setWord}></UploadWord>\r\n                                    <div className=\"wordName\">{word?.name}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col2\">\r\n                                <div className=\"minititle\">Fecha de publicación</div>\r\n                                <Input type=\"date\" className={\"inputDate\"} id=\"date\" onChange={(e)=>{UpdateValue(e,\"date\",inputList,setInputList)}}></Input>\r\n                                <div className=\"description\">\r\n                                    *La fecha se agrega automáticamente cuando se envía un nuevo artículo.\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col3\">\r\n                                <Input title={\"Nombre del artículo\"} placeholder={\"Nombre del artículo\"} className={\"inputArticleName\"} id=\"name\" onChange={(e)=>{UpdateValue(e,\"name\",inputList,setInputList)}}></Input>\r\n                            </div>\r\n                            <div className=\"col4\">\r\n\r\n                                <div className=\"minititle\">Resumen</div>\r\n                                <textarea className=\"textArea-createArticle\" id=\"resume\" onChange={(e)=>{UpdateValue(e,\"resume\",inputList,setInputList)}}></textarea>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </InteriorCard>\r\n                </ExteriorCard>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CreateArticle"],"names":["_useState","useState","_useState2","_slicedToArray","word","setWord","navigate","useNavigate","_useState3","value","validationType","date","name","resume","_useState4","inputList","setInputList","useEffect","propertyName","document","getElementById","ColorValidation","inputListCopy","_objectSpread","_jsx","_Fragment","children","className","_jsxs","ExteriorCard","Back","Header","title","button","onClick","SubmitValidation","CorrectModal","InteriorCard","UploadWord","id","setValue","Input","type","onChange","e","UpdateValue","placeholder"],"sourceRoot":""}