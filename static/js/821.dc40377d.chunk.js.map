{"version":3,"file":"static/js/821.dc40377d.chunk.js","mappings":"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","sources":["Api/login/recover_account.js","pages/TableArticles/api.js","pages/TableArticles/TableArticles.jsx","utilities/Hooks.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  CorrectModal,\r\n  IncorrectModal,\r\n} from \"../../components/molecules/modals/Modals\";\r\nconst urlApi = process.env.REACT_APP_API_URL;\r\nconst key = process.env.REACT_APP_SECRET_KEY;\r\n\r\nimport cryptojs from \"crypto-js\";\r\nexport const VerifyEmail = async (findEmail, navigate) => {\r\n  await axios\r\n    .get(`${urlApi}/api/registers?filters[email][$eq]=${findEmail}`)\r\n    .then((res) => {\r\n      if (res.data.data.length != 0) {\r\n        CorrectModal(\"Email valido\");\r\n        //-------------------------------------------------------------------------verificar si el codigo ya se mando a ese correo\r\n        const mainFunction = async () => {\r\n          if (await findEmailF(findEmail)) {\r\n            //esto se ejecuta en caso de que el codigo ya exista en base de datos solo actualiza el codigo sin agregar un nuevo elemento a la db\r\n\r\n            updateCode(res.data.data, findEmail, navigate, res.data.data[0].id);\r\n          } else {\r\n            //en caso de que el codigo no exista con esa base de datos se genera uno nuevo desde 0\r\n\r\n            let code = generateCode();\r\n            createCodeApi(findEmail, code, navigate, res.data.data[0].id);\r\n            // navigate(`/verification-code/${findEmail}`);\r\n          }\r\n        };\r\n        mainFunction();\r\n      } else {\r\n        IncorrectModal(\"Email invalido\");\r\n      }\r\n    })\r\n    .catch(() => {\r\n      IncorrectModal(\"Email invalido\");\r\n    });\r\n};\r\n\r\n//--------------------------------------------------------------------------------------------------------FUNCIONES PARA VERIFICAR SI SE ACTUALIZA O SE CREA UN CODIGO\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst generateCode = () => {\r\n  const randomNum = Math.floor(Math.random() * 90000) + 10000;\r\n  return randomNum;\r\n};\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst createCodeApi = async (email, code, navigate, id) => {\r\n  let idUsers = await getIdUsers(email);\r\n\r\n  const data = {\r\n    data: {\r\n      email: email,\r\n      code: code,\r\n    },\r\n  };\r\n  await axios.post(`${urlApi}/api/verify-codes`, data);\r\n  sendEmail(email, \"Este es un código de verificación de temachtiani\", code);\r\n  let codeEncrypt = Encrypt(code);\r\n  let idEncrypt = Encrypt(id);\r\n  let idUsersEncript = Encrypt(idUsers);\r\n  codeEncrypt = codeEncrypt.replace(/\\//g, \"_\");\r\n  idEncrypt = idEncrypt.replace(/\\//g, \"_\");\r\n  idUsersEncript = idUsersEncript.replace(/\\//g, \"_\");\r\n  navigate(`/verification-code/${codeEncrypt}/${idEncrypt}/${idUsersEncript}`);\r\n};\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst findEmailF = async (email) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${urlApi}/api/verify-codes?filters[email][$eq]=${email}`\r\n    );\r\n\r\n    if (response.data.data.length != 0) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst sendEmail = async (email, subject, text) => {\r\n  if (typeof text !== \"undefined\") {\r\n    const codestring = text.toString();\r\n    const data = {\r\n      to: email,\r\n      subject: subject,\r\n      text: codestring,\r\n    };\r\n    await axios\r\n      .post(`${urlApi}/api/email`, data)\r\n      .then((res) => {\r\n      })\r\n      .catch((res) => {\r\n      });\r\n  } else {\r\n  }\r\n};\r\n//////////////////////////////////////////////////////////////////////////////////////////////////\r\nconst updateCode = async (data, email, navigate, id) => {\r\n  const response = await axios.get(\r\n    `${urlApi}/api/verify-codes?filters[email][$eq]=${email}`\r\n  );\r\n  let idUsers = await getIdUsers(email);\r\n  let newCode = generateCode();\r\n  const newData = {\r\n    data: {\r\n      code: newCode,\r\n    },\r\n  };\r\n  await axios.put(\r\n    `${urlApi}/api/verify-codes/${response.data.data[0].id}`,\r\n    newData\r\n  );\r\n  sendEmail(email, \"Este es un código de verificación de temachtiani\", newCode);\r\n  //encriptacion de codigo\r\n  let codeEncrypt = Encrypt(newCode);\r\n  codeEncrypt = codeEncrypt.replace(/\\//g, \"_\");\r\n  //encriptacion del id\r\n  let idEncrypt = Encrypt(id);\r\n  idEncrypt = idEncrypt.replace(/\\//g, \"_\");\r\n  //encript de id users\r\n  let idUsersEncript = Encrypt(idUsers);\r\n  idUsersEncript = idUsersEncript.replace(/\\//g, \"_\");\r\n  \r\n  navigate(`/verification-code/${codeEncrypt}/${idEncrypt}/${idUsersEncript}`);\r\n};\r\n\r\nexport const Encrypt = (text) => {\r\n  return cryptojs.AES.encrypt(text.toString(), key).toString();\r\n};\r\nexport const Decrypt = (encriptText) => {\r\n  const iv = \"a0d5ebe6a0d5ebe6a0d5ebe6a0d5ebe6\";\r\n  return cryptojs.AES.decrypt(encriptText, key, {\r\n    iv: cryptojs.enc.Hex.parse(iv),\r\n  }).toString(cryptojs.enc.Utf8);\r\n};\r\n\r\nconst getIdUsers = async (email) => {\r\n  const response = await axios.get(\r\n    `${urlApi}/api/users?filters[email][$eq]=${email}`\r\n  );\r\n  return response.data[0].id;\r\n};\r\n","import axios from \"axios\";\r\nimport { Encrypt } from \"../../Api/login/recover_account\";\r\nconst urlApi = process.env.REACT_APP_API_URL;\r\nexport const getDataArticles = async (id,setData) => {\r\n  await axios\r\n    .get(`${urlApi}/api/articles?filters[idUser][$eq]=${id}`)\r\n    .then((res) => {\r\n      let newData = [];\r\n      res.data.data.map((item, key) => {\r\n        const fecha = new Date(item.attributes.createdAt);\r\n        let id = Encrypt(item.id);\r\n        id = id.replace(/\\//g, \"_\")\r\n\r\n        newData.push({\r\n          id:id,\r\n          title: item.attributes.dataArticle.name,\r\n          resume: item.attributes.dataArticle.resume,\r\n          createdat: fecha.toLocaleDateString(),\r\n          estatus:\r\n            item.attributes.dataArticle.estatus == 0\r\n              ? \"Pendiente\"\r\n              : item.attributes.dataArticle.estatus == 1\r\n              ? \"Evaluando\"\r\n              : item.attributes.dataArticle.estatus == 2\r\n              ? \"Dictaminado\"\r\n              : item.attributes.dataArticle.estatus == 3\r\n              ? \"Rechazado\"\r\n              : item.attributes.dataArticle.estatus == 4\r\n              ? \"Aceptado con correcciones menores\"\r\n              : item.attributes.dataArticle.estatus == 5\r\n              ? \"Aceptado con correcciones mayores\"\r\n              : item.attributes.dataArticle.estatus == 6\r\n              ? \"Aceptado\"\r\n              : item.attributes.dataArticle.estatus == 7\r\n              ? \"Publicado\"\r\n              : \"\"\r\n        });\r\n      });\r\n      setData(newData);\r\n    })\r\n    .catch((res) => {\r\n      console.log(res);\r\n    });\r\n};\r\n","//styles\r\nimport \"./TableArticles.scss\"\r\n\r\n//react\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport ExteriorCard from \"../../components/atoms/ExteriorCard/ExteriorCard\";\r\nimport { Header } from \"../../components\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getDataArticles } from \"./api\";\r\n\r\n\r\nimport View from '../../assets/images/eye.png'\r\nimport { Decrypt } from \"../../utilities/Hooks\";\r\n\r\nconst TableArticles = () => {\r\n\r\n    const {idUser} = useParams()\r\n\r\n    const actionTemplate = ({id}) => {\r\n        return (\r\n            <NavLink to={`/user/my-article/${id}/${idUser}`}>\r\n                <div className=\"actionTemplate\">\r\n                    {/* <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-eye\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#8A8A8A\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n                        <circle cx=\"12\" cy=\"12\" r=\"2\" />\r\n                        <path d=\"M22 12c-2.667 4.667 -6 7 -10 7s-7.333 -2.333 -10 -7c2.667 -4.667 6 -7 10 -7s7.333 2.333 10 7\" />\r\n                    </svg> */}\r\n                    <img src={View} className=\"ImgView_\"/>\r\n                </div>\r\n            </NavLink>\r\n        )\r\n    }\r\n   \r\n        const [data,setData] = useState()\r\n        \r\n        useEffect(()=>\r\n        {\r\n            const idUserDecrypt = Decrypt(idUser)\r\n            getDataArticles(idUserDecrypt,setData)\r\n        },[])\r\n    return (\r\n        <div className='TableArticles'>\r\n            <ExteriorCard>\r\n                <div className=\"containerr\">\r\n                    <Header title={\"Mis artículos\"} button=\"Enviar nuevo artículo\" url={`/user/article-create/${idUser}`}/>\r\n                    <DataTable value={data} stripedRows tableStyle={{ minWidth: '30rem' }}>\r\n                        <Column field=\"title\" header=\"Título\"></Column>\r\n                        <Column field=\"createdat\" header=\"Fecha\"></Column>\r\n                        <Column field=\"estatus\" header=\"Estado\"></Column>\r\n                        <Column field=\"actions\" header=\"Acciones\" body={actionTemplate}></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </ExteriorCard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableArticles","import cryptojs from 'crypto-js'\r\n\r\nconst key = process.env.REACT_APP_SECRET_KEY\r\n\r\nexport const Encrypt = (text) => {\r\n    let encrypt = cryptojs.AES.encrypt(text.toString(), key).toString();\r\n    encrypt = encrypt.replace(/\\//g, \"_\")\r\n    return encrypt\r\n};\r\n\r\n\r\nexport const Decrypt = (encriptText) => {\r\n    let decrypt = encriptText.replace(/_/g, \"/\")\r\n    const iv = \"a0d5ebe6a0d5ebe6a0d5ebe6a0d5ebe6\";\r\n    return cryptojs.AES.decrypt(decrypt, key, { iv: cryptojs.enc.Hex.parse(iv)}).toString(cryptojs.enc.Utf8);\r\n};"],"names":["urlApi","process","key","VerifyEmail","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","findEmail","navigate","wrap","_context2","prev","next","axios","get","concat","then","res","data","length","CorrectModal","mainFunction","_ref2","_callee","code","_context","findEmailF","sent","updateCode","id","generateCode","createCodeApi","stop","apply","arguments","IncorrectModal","catch","_x","_x2","Math","floor","random","_ref3","_callee3","email","idUsers","codeEncrypt","idEncrypt","idUsersEncript","_context3","getIdUsers","post","sendEmail","Encrypt","replace","_x3","_x4","_x5","_x6","_ref4","_callee4","_context4","abrupt","t0","_x7","_ref5","_callee5","subject","text","codestring","_context5","toString","to","_x8","_x9","_x10","_ref6","_callee6","response","newCode","newData","_context6","put","_x11","_x12","_x13","_x14","cryptojs","encrypt","Decrypt","encriptText","decrypt","iv","Hex","parse","Utf8","_ref7","_callee7","_context7","_x15","getDataArticles","setData","map","item","fecha","Date","attributes","createdAt","push","title","dataArticle","name","resume","createdat","toLocaleDateString","estatus","console","log","idUser","useParams","_useState","useState","_useState2","_slicedToArray","useEffect","idUserDecrypt","_jsx","className","children","ExteriorCard","_jsxs","Header","button","url","DataTable","value","stripedRows","tableStyle","minWidth","Column","field","header","body","NavLink","src"],"sourceRoot":""}